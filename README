===============================================================================

								Costea Mihai
									
===============================================================================

Firstly, it checks if the chosen base is good. If it isn't, the error message 
will be displayed and the next base will be checked. Once a satisfying base 
has
 been found the change_base call will change the base. This is realized through 
the divide instruction that receives as parameters the dividend, the divisor and 
a pointer to the address reserved on the stack where the rest will be saved 
through lateral effect following the division. The procedure mentioned above will 
return how much you divide. The rest is taken from the reserved address on the 
stack and it is placed inside a memory in a vector. Following the repeated 
divisions, when the result reaches 0, the vector will finally be displayed in 
reversed order and any other rest bigger than 10 will be converted to char 
through the jump to the printchar tag. 
===============================================================================
===============================================================================
Sidenotes: 
	PRINT_CHAR is bugged, it can modify the memory. If the dw and db are 
deleted from the end of the .data section, at certain inputs, following the 
PRINT_CHAR operation, the memory is modified. Afterwards, the SEGFAULT appears.

===============================================================================
===============================================================================